import { faker } from '@faker-js/faker';
import { flattenedCategories } from './categories';

faker.seed(2023);

export const staticTransactions = [
  {
    id: faker.datatype.uuid(),
    reference: 'Tempore Corporis',
    counterparty: null,
    category: flattenedCategories.find(
      (c) => c.name.toUpperCase() === 'ADVERTISING'
    ),
    isCategoryAddedByUser: false,
    date: '2023/03/15',
    amount: -1935590.42,
    currency: 'INR',
    responsible: {
      id: faker.datatype.uuid(),
      firstName: faker.name.firstName(),
      lastName: faker.name.lastName(),
      email: faker.internet.email(),
      avatarURL: faker.image.avatar(),
    },
    billURL: faker.image.abstract(304, 228, true),
    isBillNotRequired: false,
    status: 'PENDING',
  },
  {
    id: faker.datatype.uuid(),
    reference: '2/QLuAM5oX',
    counterparty: {
      id: faker.datatype.uuid(),
      name: 'Emmerich - Cremin',
      IBAN: faker.finance.iban(),
      logoURL: faker.image.avatar(),
      isBusiness: true,
    },
    category: flattenedCategories.find(
      (c) => c.name.toUpperCase() === 'SOCIAL SECURITY CONTRIBUTIONS'
    ),
    isCategoryAddedByUser: false,
    date: '2023/03/02',
    amount: 921416.02,
    currency: 'PYG',
    responsible: {
      id: faker.datatype.uuid(),
      firstName: faker.name.firstName(),
      lastName: faker.name.lastName(),
      email: faker.internet.email(),
      avatarURL: faker.image.avatar(),
    },
    billURL: faker.image.abstract(304, 228, true),
    isBillNotRequired: false,
    status: 'PENDING',
  },
  {
    id: faker.datatype.uuid(),
    reference: null,
    counterparty: null,
    category: flattenedCategories.find(
      (c) => c.name.toUpperCase() === 'DEBT INVESTMENT'
    ),
    isCategoryAddedByUser: false,
    date: '2023/01/29',
    amount: -8254948.71,
    currency: 'MKD',
    responsible: {
      id: faker.datatype.uuid(),
      firstName: 'Aaron',
      lastName: 'Sulivan',
      email: faker.internet.email(),
      avatarURL: null,
    },
    billURL: null,
    isBillNotRequired: false,
    status: 'BOOKED',
  },
  {
    id: faker.datatype.uuid(),
    reference: '@/h|kaHU32',
    counterparty: {
      id: faker.datatype.uuid(),
      name: 'Myra Kohler',
      IBAN: null,
      logoURL: null,
      isBusiness: false,
    },
    category: flattenedCategories.find(
      (c) => c.name.toUpperCase() === 'SOCIAL SECURITY CONTRIBUTIONS'
    ),
    isCategoryAddedByUser: true,
    date: '2023/01/29',
    amount: -617311.13,
    currency: 'PHP',
    responsible: {
      id: faker.datatype.uuid(),
      firstName: 'Bill',
      lastName: 'Smith',
      email: faker.internet.email(),
      avatarURL: null,
    },
    billURL: faker.image.abstract(304, 228, true),
    isBillNotRequired: false,
    status: 'BOOKED',
  },
  {
    id: faker.datatype.uuid(),
    reference: 'Culpa Sunt',
    counterparty: {
      id: faker.datatype.uuid(),
      name: 'Towne - Hegmann',
      IBAN: faker.finance.iban(),
      logoURL: faker.image.avatar(),
      isBusiness: true,
    },
    category: flattenedCategories.find((c) => c.name.toUpperCase() === 'LEGAL'),
    isCategoryAddedByUser: true,
    date: '2023/01/09',
    amount: -8236226.35,
    currency: 'PHP',
    responsible: null,
    billURL: null,
    isBillNotRequired: true,
    status: 'BOOKED',
  },
  {
    id: faker.datatype.uuid(),
    reference: 'cw!,=}.6)E',
    counterparty: {
      id: faker.datatype.uuid(),
      name: 'Alison Leannon',
      IBAN: null,
      logoURL: null,
      isBusiness: false,
    },
    category: flattenedCategories.find(
      (c) => c.name.toUpperCase() === 'POSTAGE'
    ),
    isCategoryAddedByUser: true,
    date: '2022/12/16',
    amount: -9000929.93,
    currency: 'SYP',
    responsible: null,
    billURL: null,
    isBillNotRequired: true,
    status: 'CANCELED',
  },
  {
    id: faker.datatype.uuid(),
    reference: 'E<4eZ}1Pky',
    counterparty: null,
    category: null,
    isCategoryAddedByUser: null,
    date: '2022/12/15',
    amount: -1761306.82,
    currency: 'XSU',
    responsible: null,
    billURL: faker.image.abstract(304, 228, true),
    isBillNotRequired: false,
    status: 'BOOKED',
  },
  {
    id: faker.datatype.uuid(),
    reference: '=H_x?zi#?M',
    counterparty: null,
    category: flattenedCategories.find((c) => c.name.toUpperCase() === 'TAXES'),
    isCategoryAddedByUser: true,
    date: '2022/11/21',
    amount: -271185.16,
    currency: 'HTG',
    responsible: {
      id: faker.datatype.uuid(),
      firstName: faker.name.firstName(),
      lastName: faker.name.lastName(),
      email: faker.internet.email(),
      avatarURL: faker.image.avatar(),
    },
    billURL: faker.image.abstract(304, 228, true),
    isBillNotRequired: false,
    status: 'BOOKED',
  },
  {
    id: faker.datatype.uuid(),
    reference: 'Nisi Beatae',
    counterparty: null,
    category: flattenedCategories.find(
      (c) => c.name.toUpperCase() === 'SPECIAL OUTFLOWS'
    ),
    isCategoryAddedByUser: true,
    date: '2022/11/11',
    amount: -6453886.73,
    currency: 'USD',
    responsible: {
      id: faker.datatype.uuid(),
      firstName: faker.name.firstName(),
      lastName: faker.name.lastName(),
      email: faker.internet.email(),
      avatarURL: faker.image.avatar(),
    },
    billURL: null,
    isBillNotRequired: true,
    status: 'BOOKED',
  },
  {
    id: faker.datatype.uuid(),
    reference: '6k1ZEd>RI]',
    counterparty: {
      id: faker.datatype.uuid(),
      name: 'Reilly, Schmidt and Harris',
      IBAN: faker.finance.iban(),
      logoURL: faker.image.avatar(),
      isBusiness: true,
    },
    category: flattenedCategories.find(
      (c) => c.name.toUpperCase() === 'OTHER EXPENSES'
    ),
    isCategoryAddedByUser: true,
    date: '2022/09/12',
    amount: -4641764.23,
    currency: 'ZMW',
    responsible: {
      id: faker.datatype.uuid(),
      firstName: faker.name.firstName(),
      lastName: faker.name.lastName(),
      email: faker.internet.email(),
      avatarURL: faker.image.avatar(),
    },
    billURL: null,
    isBillNotRequired: true,
    status: 'BOOKED',
  },
  {
    id: faker.datatype.uuid(),
    reference: 'Cumque Odio Corrupti Rem',
    counterparty: null,
    category: null,
    isCategoryAddedByUser: null,
    date: '2022/09/05',
    amount: 7719958.6,
    currency: 'SCR',
    responsible: {
      id: faker.datatype.uuid(),
      firstName: 'Kleber',
      lastName: 'Bambam',
      email: faker.internet.email(),
      avatarURL: null,
    },
    billURL: faker.image.abstract(304, 228, true),
    isBillNotRequired: false,
    status: 'BOOKED',
  },
];
